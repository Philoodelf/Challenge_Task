{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Philopater\\\\Desktop\\\\task\\\\project\\\\frontend\\\\src\\\\components\\\\ExchangeData.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import CategorizedData from './CategorizedData';\n\n// const ExchangeData = () => {\n//   return (\n//     <div>\n//       <h1 className=\"text-center text-3xl font-semibold mb-4\">Exchange Data</h1>\n//       <CategorizedData endpoint=\"exchange\" />\n//     </div>\n//   );\n// };\n\n// export default ExchangeData;\n\n// import { useEffect, useState } from \"react\";\n// import React from \"react\";\n\n// export default function ExchangeData() {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n\n//   // Fetch data on component mount\n//   useEffect(() => {\n//     fetch(\"http://localhost:5000/api/exchange\") // Adjust URL if necessary\n//       .then((res) => {\n//         if (!res.ok) {\n//           throw new Error(`HTTP error! status: ${res.status}`);\n//         }\n//         return res.json();\n//       })\n//       .then((response) => {\n//         console.log(\"Raw API Response:\", response); // Debug: Log raw response\n//         const extractedData =\n//           response?.hits?.hits?.map((item) => ({\n//             id: item._id, // Add _id\n//             ...item._source,\n//           })) || [];\n//         console.log(\"Extracted Data:\", extractedData); // Debug: Log extracted data\n//         setData(extractedData);\n//         setLoading(false);\n//       })\n//       .catch((err) => {\n//         console.error(\"Error fetching data:\", err);\n//         setError(err.message);\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   // Handle loading state\n//   if (loading) {\n//     return <p className=\"text-center text-gray-500\">Loading...</p>;\n//   }\n\n//   // Handle error state\n//   if (error) {\n//     return (\n//       <p className=\"text-center text-red-500\">\n//         Error: {error}. Please check your API.\n//       </p>\n//     );\n//   }\n\n//   // Handle empty data\n//   if (data.length === 0) {\n//     return <p className=\"text-center text-gray-500\">No data available.</p>;\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-50 p-8\">\n//       <h1 className=\"text-3xl font-bold text-blue-600 mb-6\">Exchange Data</h1>\n\n//       {/* Table */}\n//       <div className=\"overflow-x-auto\">\n//         <table className=\"table-auto w-full bg-white shadow-md rounded-lg\">\n//           <thead>\n//             <tr className=\"bg-blue-500 text-white\">\n//               <th className=\"px-4 py-2\">ID</th>\n//               <th className=\"px-4 py-2\">Symbol</th>\n//               <th className=\"px-4 py-2\">Name</th>\n//               <th className=\"px-4 py-2\">Type</th>\n//               <th className=\"px-4 py-2\">Currency</th>\n//               <th className=\"px-4 py-2\">Country</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {data.map((item, index) => (\n//               <tr key={index} className=\"border-b hover:bg-gray-100\">\n//                 <td className=\"px-4 py-2\">{item.id || \"N/A\"}</td>\n//                 <td className=\"px-4 py-2\">{item.symbol || \"N/A\"}</td>\n//                 <td className=\"px-4 py-2\">{item.name || \"N/A\"}</td>\n//                 <td className=\"px-4 py-2\">{item.type || \"N/A\"}</td>\n//                 <td className=\"px-4 py-2\">{item.currency || \"N/A\"}</td>\n//                 <td className=\"px-4 py-2\">{item.country || \"N/A\"}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//         </table>\n//       </div>\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExchangeData() {\n  _s();\n  const [column, setColumn] = useState([]);\n  const [records, setRecords] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:5000/api/Exchange.json').then(res => res.json()).then(data => {\n      setColumn(Object.keys(data)); // Assuming data is directly an object with the first level keys\n      setRecords(data); // The data should directly map to users\n    }).catch(err => console.error(\"Error fetching data: \", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: column.map((c, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: c\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: records.map((record, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.symbol\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.currency\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(ExchangeData, \"TToqxzs8XsP1PLua4ziBzNXhsH8=\");\n_c = ExchangeData;\nexport default ExchangeData;\nvar _c;\n$RefreshReg$(_c, \"ExchangeData\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ExchangeData","_s","column","setColumn","records","setRecords","fetch","then","res","json","data","Object","keys","catch","err","console","error","children","className","map","c","i","fileName","_jsxFileName","lineNumber","columnNumber","record","id","symbol","name","type","currency","country","_c","$RefreshReg$"],"sources":["C:/Users/Philopater/Desktop/task/project/frontend/src/components/ExchangeData.js"],"sourcesContent":["// import React from 'react';\r\n// import CategorizedData from './CategorizedData';\r\n\r\n// const ExchangeData = () => {\r\n//   return (\r\n//     <div>\r\n//       <h1 className=\"text-center text-3xl font-semibold mb-4\">Exchange Data</h1>\r\n//       <CategorizedData endpoint=\"exchange\" />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ExchangeData;\r\n\r\n// import { useEffect, useState } from \"react\";\r\n// import React from \"react\";\r\n\r\n// export default function ExchangeData() {\r\n//   const [data, setData] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   // Fetch data on component mount\r\n//   useEffect(() => {\r\n//     fetch(\"http://localhost:5000/api/exchange\") // Adjust URL if necessary\r\n//       .then((res) => {\r\n//         if (!res.ok) {\r\n//           throw new Error(`HTTP error! status: ${res.status}`);\r\n//         }\r\n//         return res.json();\r\n//       })\r\n//       .then((response) => {\r\n//         console.log(\"Raw API Response:\", response); // Debug: Log raw response\r\n//         const extractedData =\r\n//           response?.hits?.hits?.map((item) => ({\r\n//             id: item._id, // Add _id\r\n//             ...item._source,\r\n//           })) || [];\r\n//         console.log(\"Extracted Data:\", extractedData); // Debug: Log extracted data\r\n//         setData(extractedData);\r\n//         setLoading(false);\r\n//       })\r\n//       .catch((err) => {\r\n//         console.error(\"Error fetching data:\", err);\r\n//         setError(err.message);\r\n//         setLoading(false);\r\n//       });\r\n//   }, []);\r\n\r\n//   // Handle loading state\r\n//   if (loading) {\r\n//     return <p className=\"text-center text-gray-500\">Loading...</p>;\r\n//   }\r\n\r\n//   // Handle error state\r\n//   if (error) {\r\n//     return (\r\n//       <p className=\"text-center text-red-500\">\r\n//         Error: {error}. Please check your API.\r\n//       </p>\r\n//     );\r\n//   }\r\n\r\n//   // Handle empty data\r\n//   if (data.length === 0) {\r\n//     return <p className=\"text-center text-gray-500\">No data available.</p>;\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"min-h-screen bg-gray-50 p-8\">\r\n//       <h1 className=\"text-3xl font-bold text-blue-600 mb-6\">Exchange Data</h1>\r\n\r\n//       {/* Table */}\r\n//       <div className=\"overflow-x-auto\">\r\n//         <table className=\"table-auto w-full bg-white shadow-md rounded-lg\">\r\n//           <thead>\r\n//             <tr className=\"bg-blue-500 text-white\">\r\n//               <th className=\"px-4 py-2\">ID</th>\r\n//               <th className=\"px-4 py-2\">Symbol</th>\r\n//               <th className=\"px-4 py-2\">Name</th>\r\n//               <th className=\"px-4 py-2\">Type</th>\r\n//               <th className=\"px-4 py-2\">Currency</th>\r\n//               <th className=\"px-4 py-2\">Country</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {data.map((item, index) => (\r\n//               <tr key={index} className=\"border-b hover:bg-gray-100\">\r\n//                 <td className=\"px-4 py-2\">{item.id || \"N/A\"}</td>\r\n//                 <td className=\"px-4 py-2\">{item.symbol || \"N/A\"}</td>\r\n//                 <td className=\"px-4 py-2\">{item.name || \"N/A\"}</td>\r\n//                 <td className=\"px-4 py-2\">{item.type || \"N/A\"}</td>\r\n//                 <td className=\"px-4 py-2\">{item.currency || \"N/A\"}</td>\r\n//                 <td className=\"px-4 py-2\">{item.country || \"N/A\"}</td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//         </table>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nfunction ExchangeData() {\r\n  const [column, setColumn] = useState([]);\r\n  const [records, setRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/Exchange.json')\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        setColumn(Object.keys(data)); // Assuming data is directly an object with the first level keys\r\n        setRecords(data); // The data should directly map to users\r\n      })\r\n      .catch(err => console.error(\"Error fetching data: \", err));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <table className='table'>\r\n        <thead>\r\n          <tr>\r\n            {column.map((c, i) => (\r\n              <th key={i}>{c}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {\r\n            records.map((record, i) => (\r\n              <tr key={i}>\r\n                <td>{record.id}</td>\r\n                <td>{record.symbol}</td>\r\n                <td>{record.name}</td>\r\n                <td>{record.type}</td>\r\n                <td>{record.currency}</td>\r\n                <td>{record.country}</td>\r\n              </tr>\r\n            ))\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExchangeData;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}