{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Philopater\\\\Desktop\\\\task\\\\project\\\\frontend\\\\src\\\\components\\\\CategorizedData.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// const FinancialInstrumentList = ({ type }) => {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     setLoading(true);\n//     fetch(`/api/financial/${type}`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setData(data.hits.hits || []); // Adjust based on JSON structure\n//         setLoading(false);\n//       });\n//   }, [type]);\n\n//   if (loading) return <p>Loading...</p>;\n\n//   return (\n//     <ul>\n//       {data.map((item, index) => (\n//         <li key={index}>{item._source.symbol} - {item._source.name}</li>\n//       ))}\n//     </ul>\n//   );\n// };\n\n// export default FinancialInstrumentList;\n\n// import React, { useEffect, useState } from 'react';\n// import { fetchData } from '../api';\n\n// const CategorizedData = ({ endpoint }) => {\n//   const [data, setData] = useState(null);\n\n//   useEffect(() => {\n//     const getData = async () => {\n//       const result = await fetchData(endpoint);\n//       setData(result);\n//     };\n//     getData();\n//   }, [endpoint]);\n\n//   if (!data) return <p>Loading...</p>;\n\n//   return (\n//     <div>\n//       <h2>{endpoint} Data</h2>\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\n//     </div>\n//   );\n// };\n\n// export default CategorizedData;\n\n// el code da sh8aaal haaaaaaaa\n\n// import React, { useEffect, useState } from 'react';\n// import { fetchData } from '../api';\n\n// const CategorizedData = ({ endpoint }) => {\n//   const [data, setData] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const getData = async () => {\n//       try {\n//         const result = await fetchData(endpoint);\n//         setData(result);\n//       } catch (err) {\n//         setError(err.message);\n//       }\n//     };\n//     getData();\n//   }, [endpoint]);\n\n//   if (error) return <p>Error: {error}</p>;\n//   if (!data) return <p>Loading...</p>;\n\n//   return (\n//     <div>\n//       <h2>{endpoint} Data</h2>\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\n//     </div>\n//   );\n// };\n\n// const DataTable = ({ data }) => {\n//   const keys = Object.keys(data); // Get all keys from the data\n\n//   return (\n//     <table>\n//       <thead>\n//         <tr>\n//           {keys.map((key, index) => (\n//             <th key={index}>{key}</th>\n//           ))}\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {data[keys[0]].map((item, rowIndex) => (\n//           <tr key={rowIndex}>\n//             {keys.map((key, colIndex) => (\n//               <td key={colIndex}>{item[key]}</td>\n//             ))}\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\n// export default CategorizedData;\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchData } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategorizedData = ({\n  endpoint\n}) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const result = await fetchData(endpoint);\n        setData(result); // Store the fetched data\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    getData();\n  }, [endpoint]);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 21\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [endpoint.charAt(0).toUpperCase() + endpoint.slice(1), \" Data\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(CategorizedData, \"XDVXnHzsKW9JpOo48THjIq2+NOI=\");\n_c = CategorizedData;\nconst DataTable = ({\n  data\n}) => {\n  // Ensure data is an array of objects\n  const tableHeaders = data.length > 0 ? Object.keys(data[0]) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overflow-x-auto mt-4\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full table-auto border border-gray-300\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-blue-600 text-white\",\n          children: tableHeaders.map((header, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-3 px-4 border border-gray-300 text-left capitalize\",\n            children: [header.replace(/([A-Z])/g, \" $1\").trim(), \" \"]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: `${rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"} hover:bg-gray-200`,\n          children: tableHeaders.map((header, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-3 px-4 border border-gray-300 text-gray-700\",\n            children: row[header] !== null && row[header] !== undefined && typeof row[header] !== \"object\" ? row[header] : row[header] && typeof row[header] === \"object\" ? JSON.stringify(row[header]) : \"N/A\"\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_c2 = DataTable;\nexport default CategorizedData;\nvar _c, _c2;\n$RefreshReg$(_c, \"CategorizedData\");\n$RefreshReg$(_c2, \"DataTable\");","map":{"version":3,"names":["React","useEffect","useState","fetchData","jsxDEV","_jsxDEV","CategorizedData","endpoint","_s","data","setData","error","setError","getData","result","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","DataTable","_c","tableHeaders","length","Object","keys","className","map","header","index","replace","trim","row","rowIndex","colIndex","undefined","JSON","stringify","_c2","$RefreshReg$"],"sources":["C:/Users/Philopater/Desktop/task/project/frontend/src/components/CategorizedData.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// const FinancialInstrumentList = ({ type }) => {\r\n//   const [data, setData] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     setLoading(true);\r\n//     fetch(`/api/financial/${type}`)\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setData(data.hits.hits || []); // Adjust based on JSON structure\r\n//         setLoading(false);\r\n//       });\r\n//   }, [type]);\r\n\r\n//   if (loading) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <ul>\r\n//       {data.map((item, index) => (\r\n//         <li key={index}>{item._source.symbol} - {item._source.name}</li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\n// export default FinancialInstrumentList;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { fetchData } from '../api';\r\n\r\n// const CategorizedData = ({ endpoint }) => {\r\n//   const [data, setData] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const getData = async () => {\r\n//       const result = await fetchData(endpoint);\r\n//       setData(result);\r\n//     };\r\n//     getData();\r\n//   }, [endpoint]);\r\n\r\n//   if (!data) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>{endpoint} Data</h2>\r\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CategorizedData;\r\n\r\n    // el code da sh8aaal haaaaaaaa\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { fetchData } from '../api';\r\n\r\n// const CategorizedData = ({ endpoint }) => {\r\n//   const [data, setData] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const getData = async () => {\r\n//       try {\r\n//         const result = await fetchData(endpoint);\r\n//         setData(result);\r\n//       } catch (err) {\r\n//         setError(err.message);\r\n//       }\r\n//     };\r\n//     getData();\r\n//   }, [endpoint]);\r\n\r\n//   if (error) return <p>Error: {error}</p>;\r\n//   if (!data) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>{endpoint} Data</h2>\r\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const DataTable = ({ data }) => {\r\n//   const keys = Object.keys(data); // Get all keys from the data\r\n\r\n//   return (\r\n//     <table>\r\n//       <thead>\r\n//         <tr>\r\n//           {keys.map((key, index) => (\r\n//             <th key={index}>{key}</th>\r\n//           ))}\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {data[keys[0]].map((item, rowIndex) => (\r\n//           <tr key={rowIndex}>\r\n//             {keys.map((key, colIndex) => (\r\n//               <td key={colIndex}>{item[key]}</td>\r\n//             ))}\r\n//           </tr>\r\n//         ))}\r\n//       </tbody>\r\n//     </table>\r\n//   );\r\n// };\r\n\r\n// export default CategorizedData;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { fetchData } from '../api';\r\n\r\nconst CategorizedData = ({ endpoint }) => {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const result = await fetchData(endpoint);\r\n        setData(result); // Store the fetched data\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    };\r\n    getData();\r\n  }, [endpoint]);\r\n\r\n  if (error) return <p>Error: {error}</p>;\r\n  if (!data) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>{endpoint.charAt(0).toUpperCase() + endpoint.slice(1)} Data</h2>\r\n      <DataTable data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DataTable = ({ data }) => {\r\n  // Ensure data is an array of objects\r\n  const tableHeaders = data.length > 0 ? Object.keys(data[0]) : [];\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto mt-4\">\r\n      <table className=\"min-w-full table-auto border border-gray-300\">\r\n        {/* Table Header */}\r\n        <thead>\r\n          <tr className=\"bg-blue-600 text-white\">\r\n            {tableHeaders.map((header, index) => (\r\n              <th\r\n                key={index}\r\n                className=\"py-3 px-4 border border-gray-300 text-left capitalize\"\r\n              >\r\n                {header.replace(/([A-Z])/g, \" $1\").trim()} {/* Format camelCase */}\r\n              </th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n\r\n        {/* Table Body */}\r\n        <tbody>\r\n          {data.map((row, rowIndex) => (\r\n            <tr\r\n              key={rowIndex}\r\n              className={`${\r\n                rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"\r\n              } hover:bg-gray-200`}\r\n            >\r\n              {tableHeaders.map((header, colIndex) => (\r\n                <td\r\n                  key={colIndex}\r\n                  className=\"py-3 px-4 border border-gray-300 text-gray-700\"\r\n                >\r\n                  {/* Handle null, undefined, or nested objects */}\r\n                  {row[header] !== null &&\r\n                  row[header] !== undefined &&\r\n                  typeof row[header] !== \"object\"\r\n                    ? row[header]\r\n                    : row[header] && typeof row[header] === \"object\"\r\n                    ? JSON.stringify(row[header])\r\n                    : \"N/A\"}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default CategorizedData;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}