{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Philopater\\\\Desktop\\\\task\\\\project\\\\frontend\\\\src\\\\components\\\\CategorizedData.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// const FinancialInstrumentList = ({ type }) => {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     setLoading(true);\n//     fetch(`/api/financial/${type}`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setData(data.hits.hits || []); // Adjust based on JSON structure\n//         setLoading(false);\n//       });\n//   }, [type]);\n\n//   if (loading) return <p>Loading...</p>;\n\n//   return (\n//     <ul>\n//       {data.map((item, index) => (\n//         <li key={index}>{item._source.symbol} - {item._source.name}</li>\n//       ))}\n//     </ul>\n//   );\n// };\n\n// export default FinancialInstrumentList;\n\n// import React, { useEffect, useState } from 'react';\n// import { fetchData } from '../api';\n\n// const CategorizedData = ({ endpoint }) => {\n//   const [data, setData] = useState(null);\n\n//   useEffect(() => {\n//     const getData = async () => {\n//       const result = await fetchData(endpoint);\n//       setData(result);\n//     };\n//     getData();\n//   }, [endpoint]);\n\n//   if (!data) return <p>Loading...</p>;\n\n//   return (\n//     <div>\n//       <h2>{endpoint} Data</h2>\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\n//     </div>\n//   );\n// };\n\n// export default CategorizedData;\n\n// el code da sh8aaal haaaaaaaa\n\n// import React, { useEffect, useState } from 'react';\n// import { fetchData } from '../api';\n\n// const CategorizedData = ({ endpoint }) => {\n//   const [data, setData] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const getData = async () => {\n//       try {\n//         const result = await fetchData(endpoint);\n//         setData(result);\n//       } catch (err) {\n//         setError(err.message);\n//       }\n//     };\n//     getData();\n//   }, [endpoint]);\n\n//   if (error) return <p>Error: {error}</p>;\n//   if (!data) return <p>Loading...</p>;\n\n//   return (\n//     <div>\n//       <h2>{endpoint} Data</h2>\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\n//     </div>\n//   );\n// };\n\n// const DataTable = ({ data }) => {\n//   const keys = Object.keys(data); // Get all keys from the data\n\n//   return (\n//     <table>\n//       <thead>\n//         <tr>\n//           {keys.map((key, index) => (\n//             <th key={index}>{key}</th>\n//           ))}\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {data[keys[0]].map((item, rowIndex) => (\n//           <tr key={rowIndex}>\n//             {keys.map((key, colIndex) => (\n//               <td key={colIndex}>{item[key]}</td>\n//             ))}\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\n// export default CategorizedData;\n\n// import React, { useEffect, useState } from 'react';\n// import { fetchData } from '../api';\n\n// const CategorizedData = ({ endpoint }) => {\n//   const [data, setData] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const getData = async () => {\n//       try {\n//         const result = await fetchData(endpoint);\n//         setData(result); // Store the fetched data\n//       } catch (err) {\n//         setError(err.message);\n//       }\n//     };\n//     getData();\n//   }, [endpoint]);\n\n//   if (error) return <p>Error: {error}</p>;\n//   if (!data) return <p>Loading...</p>;\n\n//   return (\n//     <div>\n//       <h2>{endpoint.charAt(0).toUpperCase() + endpoint.slice(1)} Data</h2>\n//       <DataTable data={data} />\n//     </div>\n//   );\n// };\n\n// const DataTable = ({ data }) => {\n//   // Ensure data is an array of objects\n//   const tableHeaders = data.length > 0 ? Object.keys(data[0]) : [];\n\n//   return (\n//     <div className=\"overflow-x-auto mt-4\">\n//       <table className=\"min-w-full table-auto border border-gray-300\">\n//         {/* Table Header */}\n//         <thead>\n//           <tr className=\"bg-blue-600 text-white\">\n//             {tableHeaders.map((header, index) => (\n//               <th\n//                 key={index}\n//                 className=\"py-3 px-4 border border-gray-300 text-left capitalize\"\n//               >\n//                 {header.replace(/([A-Z])/g, \" $1\").trim()} {/* Format camelCase */}\n//               </th>\n//             ))}\n//           </tr>\n//         </thead>\n\n//         {/* Table Body */}\n//         <tbody>\n//           {data.map((row, rowIndex) => (\n//             <tr\n//               key={rowIndex}\n//               className={`${\n//                 rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"\n//               } hover:bg-gray-200`}\n//             >\n//               {tableHeaders.map((header, colIndex) => (\n//                 <td\n//                   key={colIndex}\n//                   className=\"py-3 px-4 border border-gray-300 text-gray-700\"\n//                 >\n//                   {/* Handle null, undefined, or nested objects */}\n//                   {row[header] !== null &&\n//                   row[header] !== undefined &&\n//                   typeof row[header] !== \"object\"\n//                     ? row[header]\n//                     : row[header] && typeof row[header] === \"object\"\n//                     ? JSON.stringify(row[header])\n//                     : \"N/A\"}\n//                 </td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default CategorizedData;\n\n// el code ely sh8aaaaaaaaaaaaaaaaaaaaaaaaaaaal\n\n// import React, { useEffect, useState } from \"react\";\n// import { fetchData } from \"../api\";\n\n// const CategorizedData = ({ endpoint }) => {\n//   const [data, setData] = useState([]);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const getData = async () => {\n//       try {\n//         const result = await fetchData(endpoint);\n//         console.log(\"Fetched Data:\", result); // Log fetched data to check format\n//         if (Array.isArray(result)) {\n//           setData(result); // Set data only if it's an array\n//         } else if (result && typeof result === \"object\") {\n//           // Convert object values to an array\n//           setData(Object.values(result));\n//         } else {\n//           setData([]); // Fallback to an empty array\n//         }\n//       } catch (err) {\n//         console.error(\"Error fetching data:\", err.message);\n//         setError(err.message);\n//       }\n//     };\n//     getData();\n//   }, [endpoint]);\n\n//   if (error)\n//     return <p className=\"text-center text-red-500 font-semibold\">Error: {error}</p>;\n//   if (!data || data.length === 0)\n//     return <p className=\"text-center text-gray-500 font-semibold\">loading....</p>;\n\n//   return (\n//     <div className=\"p-4\">\n//       <h2 className=\"text-2xl font-semibold text-center text-blue-600 mb-4\">\n//         {endpoint.charAt(0).toUpperCase() + endpoint.slice(1)} Data\n//       </h2>\n//       <DataTable data={data} />\n//     </div>\n//   );\n// };\n\n// const DataTable = ({ data }) => {\n//   if (!Array.isArray(data) || data.length === 0) {\n//     return <p className=\"text-center text-gray-500\">loading...</p>;\n//   }\n\n//   // Extract headers dynamically from the first row\n//   const tableHeaders = Object.keys(data[0]);\n\n//   return (\n//     <div className=\"overflow-x-auto mt-4\">\n//       <table className=\"min-w-full table-auto border border-gray-300\">\n//         {/* Table Header */}\n//         <thead>\n//           <tr className=\"bg-blue-600 text-white\">\n//             {tableHeaders.map((header, index) => (\n//               <th\n//                 key={index}\n//                 className=\"py-3 px-4 border border-gray-300 text-left capitalize\"\n//               >\n//                 {header.replace(/([A-Z])/g, \" $1\").trim()} {/* Format camelCase */}\n//               </th>\n//             ))}\n//           </tr>\n//         </thead>\n\n//         {/* Table Body */}\n//         <tbody>\n//           {data.map((row, rowIndex) => (\n//             <tr\n//               key={rowIndex}\n//               className={`${\n//                 rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"\n//               } hover:bg-gray-200`}\n//             >\n//               {tableHeaders.map((header, colIndex) => (\n//                 <td\n//                   key={colIndex}\n//                   className=\"py-3 px-4 border border-gray-300 text-gray-700\"\n//                 >\n//                   {/* Handle null, undefined, or nested objects */}\n//                   {row[header] !== null &&\n//                   row[header] !== undefined &&\n//                   typeof row[header] !== \"object\"\n//                     ? row[header]\n//                     : row[header] && typeof row[header] === \"object\"\n//                     ? JSON.stringify(row[header])\n//                     : \"N/A\"}\n//                 </td>\n//               ))}\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// export default CategorizedData;\n\nimport React, { useEffect, useState } from \"react\";\nimport { fetchData } from \"../api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CategorizedData = ({\n  endpoint\n}) => {\n  _s();\n  const [data, setData] = useState([]); // All fetched data\n  const [error, setError] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1); // Current page\n  const rowsPerPage = 5; // Number of rows per page\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const result = await fetchData(endpoint);\n        if (Array.isArray(result)) {\n          setData(result);\n        } else if (result && typeof result === \"object\") {\n          const values = Object.values(result);\n          if (endpoint === \"candle\") {\n            setData(values);\n          } else {\n            setData(values);\n          }\n        } else {\n          setData([]);\n        }\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    getData();\n  }, [endpoint]);\n\n  // Pagination logic\n  const startIndex = (currentPage - 1) * rowsPerPage;\n  const paginatedData = data.slice(startIndex, startIndex + rowsPerPage);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-red-500 font-semibold\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 12\n    }, this);\n  }\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-500 font-semibold\",\n      children: \"loading.....\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-center text-blue-600 mb-4\",\n      children: [endpoint.charAt(0).toUpperCase() + endpoint.slice(1), \" Data\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      endpoint: endpoint,\n      data: paginatedData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      totalRows: data.length,\n      rowsPerPage: rowsPerPage,\n      onPageChange: page => setCurrentPage(page)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 5\n  }, this);\n};\n_s(CategorizedData, \"QtrkTPoY1uQ6zoJ57GRUzU8nzi0=\");\n_c = CategorizedData;\nconst DataTable = ({\n  data,\n  endpoint\n}) => {\n  function handleShow(e) {\n    const desiredElement = e.target.parentElement.nextSibling;\n    if (desiredElement.classList.contains(\"hidden\")) {\n      desiredElement.classList.remove(\"hidden\");\n      desiredElement.querySelector(`[data-id='${e.target.getAttribute(\"data-id\")}']`).classList.remove(\"hidden\");\n    } else {\n      desiredElement.classList.add(\"hidden\");\n      desiredElement.querySelector(`[data-id='${e.target.getAttribute(\"data-id\")}']`).classList.remove(\"hidden\");\n    }\n  }\n  if (!Array.isArray(data) || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center text-gray-500\",\n      children: \"No records to display.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 12\n    }, this);\n  }\n  const headers = Object.keys(typeof data[0][0] === \"object\" && !Array.isArray(data[0][0]) ? data[0][0] : data[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overflow-x-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-auto w-full bg-white shadow-md rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-blue-500 text-black\",\n          children: headers.map(header => {\n            return /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"px-4 py-2\",\n              children: header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: endpoint === \"candle\" ? data[0].map((row, rowIndex) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              className: `${rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"} hover:bg-gray-200`,\n              children: Object.values(row).map((header, colIndex) => typeof header != \"object\" && /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-id\": colIndex,\n                className: \"py-2 px-4 border border-gray-300 minimiz-text relative\",\n                onClick: e => handleShow(e),\n                children: header\n              }, colIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 25\n              }, this))\n            }, rowIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: `${rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"}  hover:bg-gray-200 hidden`,\n              children: Object.values(row).map((header, colIndex) => typeof header != \"object\" && /*#__PURE__*/_jsxDEV(\"td\", {\n                \"data-id\": colIndex,\n                className: \"py-2 px-4 border border-gray-300 minimiz-text relative hidden\",\n                children: header\n              }, colIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 25\n              }, this))\n            }, rowIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true);\n        }) : data.map((row, rowIndex) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              className: `${rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"} hover:bg-gray-200`,\n              children: row.map(rowObject => {\n                return Object.values(rowObject).map((header, colIndex) => typeof header != \"object\" && /*#__PURE__*/_jsxDEV(\"td\", {\n                  \"data-id\": colIndex,\n                  className: \"py-2 px-4 border border-gray-300 minimiz-text relative\",\n                  onClick: e => handleShow(e),\n                  children: header\n                }, colIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 27\n                }, this));\n              })\n            }, rowIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: `${rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"}  hover:bg-gray-200 hidden`,\n              children: row.map(rowObject => {\n                return Object.values(rowObject).map((header, colIndex) => typeof header != \"object\" && /*#__PURE__*/_jsxDEV(\"td\", {\n                  \"data-id\": colIndex,\n                  className: \"py-2 px-4 border border-gray-300 minimiz-text relative hidden\",\n                  children: header\n                }, colIndex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 474,\n                  columnNumber: 27\n                }, this));\n              })\n            }, rowIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 394,\n    columnNumber: 5\n  }, this);\n};\n_c2 = DataTable;\nconst Pagination = ({\n  currentPage,\n  totalRows,\n  rowsPerPage,\n  onPageChange\n}) => {\n  const totalPages = Math.ceil(totalRows / rowsPerPage);\n  if (totalPages <= 1) {\n    return null; // Hide pagination for single-page data\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex justify-center mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"px-3 py-1 border border-gray-300 rounded-l-lg bg-gray-100 hover:bg-gray-200\",\n      onClick: () => onPageChange(currentPage - 1),\n      disabled: currentPage === 1,\n      children: \"Previous\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 7\n    }, this), [...Array(totalPages).keys()].map(page => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `px-3 py-1 border border-gray-300 ${currentPage === page + 1 ? \"bg-blue-600 text-white\" : \"bg-gray-100\"} hover:bg-gray-200`,\n      onClick: () => onPageChange(page + 1),\n      children: page + 1\n    }, page, false, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"px-3 py-1 border border-gray-300 rounded-r-lg bg-gray-100 hover:bg-gray-200\",\n      onClick: () => onPageChange(currentPage + 1),\n      disabled: currentPage === totalPages,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 500,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Pagination;\nexport default CategorizedData;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CategorizedData\");\n$RefreshReg$(_c2, \"DataTable\");\n$RefreshReg$(_c3, \"Pagination\");","map":{"version":3,"names":["React","useEffect","useState","fetchData","jsxDEV","_jsxDEV","Fragment","_Fragment","CategorizedData","endpoint","_s","data","setData","error","setError","currentPage","setCurrentPage","rowsPerPage","getData","result","Array","isArray","values","Object","err","message","startIndex","paginatedData","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","charAt","toUpperCase","DataTable","Pagination","totalRows","onPageChange","page","_c","handleShow","e","desiredElement","target","parentElement","nextSibling","classList","contains","remove","querySelector","getAttribute","add","headers","keys","map","header","row","rowIndex","colIndex","onClick","rowObject","_c2","totalPages","Math","ceil","disabled","_c3","$RefreshReg$"],"sources":["C:/Users/Philopater/Desktop/task/project/frontend/src/components/CategorizedData.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// const FinancialInstrumentList = ({ type }) => {\r\n//   const [data, setData] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     setLoading(true);\r\n//     fetch(`/api/financial/${type}`)\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setData(data.hits.hits || []); // Adjust based on JSON structure\r\n//         setLoading(false);\r\n//       });\r\n//   }, [type]);\r\n\r\n//   if (loading) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <ul>\r\n//       {data.map((item, index) => (\r\n//         <li key={index}>{item._source.symbol} - {item._source.name}</li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\n// export default FinancialInstrumentList;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { fetchData } from '../api';\r\n\r\n// const CategorizedData = ({ endpoint }) => {\r\n//   const [data, setData] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const getData = async () => {\r\n//       const result = await fetchData(endpoint);\r\n//       setData(result);\r\n//     };\r\n//     getData();\r\n//   }, [endpoint]);\r\n\r\n//   if (!data) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>{endpoint} Data</h2>\r\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CategorizedData;\r\n\r\n// el code da sh8aaal haaaaaaaa\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { fetchData } from '../api';\r\n\r\n// const CategorizedData = ({ endpoint }) => {\r\n//   const [data, setData] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const getData = async () => {\r\n//       try {\r\n//         const result = await fetchData(endpoint);\r\n//         setData(result);\r\n//       } catch (err) {\r\n//         setError(err.message);\r\n//       }\r\n//     };\r\n//     getData();\r\n//   }, [endpoint]);\r\n\r\n//   if (error) return <p>Error: {error}</p>;\r\n//   if (!data) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>{endpoint} Data</h2>\r\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const DataTable = ({ data }) => {\r\n//   const keys = Object.keys(data); // Get all keys from the data\r\n\r\n//   return (\r\n//     <table>\r\n//       <thead>\r\n//         <tr>\r\n//           {keys.map((key, index) => (\r\n//             <th key={index}>{key}</th>\r\n//           ))}\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {data[keys[0]].map((item, rowIndex) => (\r\n//           <tr key={rowIndex}>\r\n//             {keys.map((key, colIndex) => (\r\n//               <td key={colIndex}>{item[key]}</td>\r\n//             ))}\r\n//           </tr>\r\n//         ))}\r\n//       </tbody>\r\n//     </table>\r\n//   );\r\n// };\r\n\r\n// export default CategorizedData;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { fetchData } from '../api';\r\n\r\n// const CategorizedData = ({ endpoint }) => {\r\n//   const [data, setData] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const getData = async () => {\r\n//       try {\r\n//         const result = await fetchData(endpoint);\r\n//         setData(result); // Store the fetched data\r\n//       } catch (err) {\r\n//         setError(err.message);\r\n//       }\r\n//     };\r\n//     getData();\r\n//   }, [endpoint]);\r\n\r\n//   if (error) return <p>Error: {error}</p>;\r\n//   if (!data) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>{endpoint.charAt(0).toUpperCase() + endpoint.slice(1)} Data</h2>\r\n//       <DataTable data={data} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const DataTable = ({ data }) => {\r\n//   // Ensure data is an array of objects\r\n//   const tableHeaders = data.length > 0 ? Object.keys(data[0]) : [];\r\n\r\n//   return (\r\n//     <div className=\"overflow-x-auto mt-4\">\r\n//       <table className=\"min-w-full table-auto border border-gray-300\">\r\n//         {/* Table Header */}\r\n//         <thead>\r\n//           <tr className=\"bg-blue-600 text-white\">\r\n//             {tableHeaders.map((header, index) => (\r\n//               <th\r\n//                 key={index}\r\n//                 className=\"py-3 px-4 border border-gray-300 text-left capitalize\"\r\n//               >\r\n//                 {header.replace(/([A-Z])/g, \" $1\").trim()} {/* Format camelCase */}\r\n//               </th>\r\n//             ))}\r\n//           </tr>\r\n//         </thead>\r\n\r\n//         {/* Table Body */}\r\n//         <tbody>\r\n//           {data.map((row, rowIndex) => (\r\n//             <tr\r\n//               key={rowIndex}\r\n//               className={`${\r\n//                 rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"\r\n//               } hover:bg-gray-200`}\r\n//             >\r\n//               {tableHeaders.map((header, colIndex) => (\r\n//                 <td\r\n//                   key={colIndex}\r\n//                   className=\"py-3 px-4 border border-gray-300 text-gray-700\"\r\n//                 >\r\n//                   {/* Handle null, undefined, or nested objects */}\r\n//                   {row[header] !== null &&\r\n//                   row[header] !== undefined &&\r\n//                   typeof row[header] !== \"object\"\r\n//                     ? row[header]\r\n//                     : row[header] && typeof row[header] === \"object\"\r\n//                     ? JSON.stringify(row[header])\r\n//                     : \"N/A\"}\r\n//                 </td>\r\n//               ))}\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CategorizedData;\r\n\r\n// el code ely sh8aaaaaaaaaaaaaaaaaaaaaaaaaaaal\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { fetchData } from \"../api\";\r\n\r\n\r\n// const CategorizedData = ({ endpoint }) => {\r\n//   const [data, setData] = useState([]);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const getData = async () => {\r\n//       try {\r\n//         const result = await fetchData(endpoint);\r\n//         console.log(\"Fetched Data:\", result); // Log fetched data to check format\r\n//         if (Array.isArray(result)) {\r\n//           setData(result); // Set data only if it's an array\r\n//         } else if (result && typeof result === \"object\") {\r\n//           // Convert object values to an array\r\n//           setData(Object.values(result));\r\n//         } else {\r\n//           setData([]); // Fallback to an empty array\r\n//         }\r\n//       } catch (err) {\r\n//         console.error(\"Error fetching data:\", err.message);\r\n//         setError(err.message);\r\n//       }\r\n//     };\r\n//     getData();\r\n//   }, [endpoint]);\r\n\r\n//   if (error)\r\n//     return <p className=\"text-center text-red-500 font-semibold\">Error: {error}</p>;\r\n//   if (!data || data.length === 0)\r\n//     return <p className=\"text-center text-gray-500 font-semibold\">loading....</p>;\r\n\r\n//   return (\r\n//     <div className=\"p-4\">\r\n//       <h2 className=\"text-2xl font-semibold text-center text-blue-600 mb-4\">\r\n//         {endpoint.charAt(0).toUpperCase() + endpoint.slice(1)} Data\r\n//       </h2>\r\n//       <DataTable data={data} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const DataTable = ({ data }) => {\r\n//   if (!Array.isArray(data) || data.length === 0) {\r\n//     return <p className=\"text-center text-gray-500\">loading...</p>;\r\n//   }\r\n\r\n//   // Extract headers dynamically from the first row\r\n//   const tableHeaders = Object.keys(data[0]);\r\n\r\n//   return (\r\n//     <div className=\"overflow-x-auto mt-4\">\r\n//       <table className=\"min-w-full table-auto border border-gray-300\">\r\n//         {/* Table Header */}\r\n//         <thead>\r\n//           <tr className=\"bg-blue-600 text-white\">\r\n//             {tableHeaders.map((header, index) => (\r\n//               <th\r\n//                 key={index}\r\n//                 className=\"py-3 px-4 border border-gray-300 text-left capitalize\"\r\n//               >\r\n//                 {header.replace(/([A-Z])/g, \" $1\").trim()} {/* Format camelCase */}\r\n//               </th>\r\n//             ))}\r\n//           </tr>\r\n//         </thead>\r\n\r\n//         {/* Table Body */}\r\n//         <tbody>\r\n//           {data.map((row, rowIndex) => (\r\n//             <tr\r\n//               key={rowIndex}\r\n//               className={`${\r\n//                 rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"\r\n//               } hover:bg-gray-200`}\r\n//             >\r\n//               {tableHeaders.map((header, colIndex) => (\r\n//                 <td\r\n//                   key={colIndex}\r\n//                   className=\"py-3 px-4 border border-gray-300 text-gray-700\"\r\n//                 >\r\n//                   {/* Handle null, undefined, or nested objects */}\r\n//                   {row[header] !== null &&\r\n//                   row[header] !== undefined &&\r\n//                   typeof row[header] !== \"object\"\r\n//                     ? row[header]\r\n//                     : row[header] && typeof row[header] === \"object\"\r\n//                     ? JSON.stringify(row[header])\r\n//                     : \"N/A\"}\r\n//                 </td>\r\n//               ))}\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CategorizedData;\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { fetchData } from \"../api\";\r\n\r\nconst CategorizedData = ({ endpoint }) => {\r\n  const [data, setData] = useState([]); // All fetched data\r\n  const [error, setError] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1); // Current page\r\n  const rowsPerPage = 5; // Number of rows per page\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const result = await fetchData(endpoint);\r\n        if (Array.isArray(result)) {\r\n          setData(result);\r\n        } else if (result && typeof result === \"object\") {\r\n          const values = Object.values(result);\r\n          if (endpoint === \"candle\") {\r\n            setData(values);\r\n          } else {\r\n            setData(values);\r\n          }\r\n\r\n        } else {\r\n          setData([]);\r\n        }\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    };\r\n    getData();\r\n  }, [endpoint]);\r\n\r\n  // Pagination logic\r\n  const startIndex = (currentPage - 1) * rowsPerPage;\r\n  const paginatedData = data.slice(startIndex, startIndex + rowsPerPage);\r\n\r\n  if (error) {\r\n    return <p className=\"text-center text-red-500 font-semibold\">Error: {error}</p>;\r\n  }\r\n\r\n  if (!data || data.length === 0) {\r\n    return <p className=\"text-center text-gray-500 font-semibold\">loading.....</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-semibold text-center text-blue-600 mb-4\">\r\n        {endpoint.charAt(0).toUpperCase() + endpoint.slice(1)} Data\r\n      </h2>\r\n\r\n      {/* Data Table */}\r\n      <DataTable endpoint={endpoint} data={paginatedData} />\r\n\r\n      {/* Pagination Controls */}\r\n      <Pagination\r\n        currentPage={currentPage}\r\n        totalRows={data.length}\r\n        rowsPerPage={rowsPerPage}\r\n        onPageChange={(page) => setCurrentPage(page)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DataTable = ({ data, endpoint }) => {\r\n  function handleShow(e) {\r\n    const desiredElement = e.target.parentElement.nextSibling;\r\n    if(desiredElement.classList.contains(\"hidden\")){\r\n      desiredElement.classList.remove(\"hidden\");\r\n      desiredElement.querySelector(`[data-id='${e.target.getAttribute(\"data-id\")}']`).classList.remove(\"hidden\")\r\n    }else{\r\n      desiredElement.classList.add(\"hidden\");\r\n      desiredElement.querySelector(`[data-id='${e.target.getAttribute(\"data-id\")}']`).classList.remove(\"hidden\")\r\n    }\r\n  }\r\n\r\n  if (!Array.isArray(data) || data.length === 0) {\r\n    return <p className=\"text-center text-gray-500\">No records to display.</p>;\r\n  }\r\n\r\n  const headers = Object.keys((typeof data[0][0] === \"object\" && !Array.isArray(data[0][0])) ? data[0][0] : data[0]);\r\n\r\n\r\n  return (\r\n    <div className=\"overflow-x-auto\">\r\n      <table className=\"table-auto w-full bg-white shadow-md rounded-lg\">\r\n        <thead>\r\n          <tr className=\"bg-blue-500 text-black\">\r\n            {headers.map((header) => {\r\n              return <th className=\"px-4 py-2\">{header}</th>;\r\n            })\r\n            }\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {endpoint === \"candle\" ? (data[0].map((row, rowIndex) => {\r\n            return (\r\n              <>\r\n                <tr\r\n                  key={rowIndex}\r\n                  className={`${rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"\r\n                    } hover:bg-gray-200`}\r\n                >\r\n                  {\r\n                    Object.values(row).map((header, colIndex) => (\r\n                      typeof header != \"object\" && (\r\n\r\n\r\n                        <td key={colIndex} data-id={colIndex} className=\"py-2 px-4 border border-gray-300 minimiz-text relative\" onClick={(e) => handleShow(e)}>\r\n                          {header}\r\n                        </td>)\r\n                    ))}\r\n\r\n                </tr>\r\n                <tr\r\n                  key={rowIndex}\r\n                  className={`${rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"\r\n                    }  hover:bg-gray-200 hidden`}\r\n                >\r\n                  {\r\n                    Object.values(row).map((header, colIndex) => (\r\n                      typeof header != \"object\" && (\r\n\r\n\r\n                        <td key={colIndex} data-id={colIndex} className=\"py-2 px-4 border border-gray-300 minimiz-text relative hidden\">\r\n                          {header}\r\n                        </td>)\r\n                    ))}\r\n\r\n                </tr>\r\n\r\n              </>\r\n            )\r\n          })) : (data.map((row, rowIndex) => {\r\n            return (\r\n              <>\r\n                <tr\r\n                  key={rowIndex}\r\n                  className={`${rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"\r\n                    } hover:bg-gray-200`}\r\n                >\r\n                  {row.map((rowObject) => {\r\n                    return (\r\n                      Object.values(rowObject).map((header, colIndex) => (\r\n                        typeof header != \"object\" && (\r\n\r\n\r\n                          <td key={colIndex} data-id={colIndex} className=\"py-2 px-4 border border-gray-300 minimiz-text relative\" onClick={(e) => handleShow(e)}>\r\n                            {header}\r\n                          </td>)\r\n                      ))\r\n                    )\r\n                  })}\r\n\r\n                </tr>\r\n                <tr\r\n                  key={rowIndex}\r\n                  className={`${rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"\r\n                    }  hover:bg-gray-200 hidden`}\r\n                >\r\n                  {row.map((rowObject) => {\r\n                    return (\r\n                      Object.values(rowObject).map((header, colIndex) => (\r\n                        typeof header != \"object\" && (\r\n                          <td key={colIndex} data-id={colIndex} className=\"py-2 px-4 border border-gray-300 minimiz-text relative hidden\">\r\n                            {header}\r\n                          </td>)\r\n                      ))\r\n                    )\r\n                  })}\r\n\r\n                </tr>\r\n              </>\r\n            )\r\n          }))\r\n          }\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Pagination = ({ currentPage, totalRows, rowsPerPage, onPageChange }) => {\r\n  const totalPages = Math.ceil(totalRows / rowsPerPage);\r\n\r\n  if (totalPages <= 1) {\r\n    return null; // Hide pagination for single-page data\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex justify-center mt-4\">\r\n      <button\r\n        className=\"px-3 py-1 border border-gray-300 rounded-l-lg bg-gray-100 hover:bg-gray-200\"\r\n        onClick={() => onPageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n      >\r\n        Previous\r\n      </button>\r\n      {[...Array(totalPages).keys()].map((page) => (\r\n        <button\r\n          key={page}\r\n          className={`px-3 py-1 border border-gray-300 ${currentPage === page + 1 ? \"bg-blue-600 text-white\" : \"bg-gray-100\"\r\n            } hover:bg-gray-200`}\r\n          onClick={() => onPageChange(page + 1)}\r\n        >\r\n          {page + 1}\r\n        </button>\r\n      ))}\r\n      <button\r\n        className=\"px-3 py-1 border border-gray-300 rounded-r-lg bg-gray-100 hover:bg-gray-200\"\r\n        onClick={() => onPageChange(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategorizedData;\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}