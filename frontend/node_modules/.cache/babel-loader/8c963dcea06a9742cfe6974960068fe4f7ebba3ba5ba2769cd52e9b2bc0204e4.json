{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Philopater\\\\Desktop\\\\task\\\\project\\\\frontend\\\\src\\\\components\\\\CategorizedData.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n\n// const FinancialInstrumentList = ({ type }) => {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     setLoading(true);\n//     fetch(`/api/financial/${type}`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setData(data.hits.hits || []); // Adjust based on JSON structure\n//         setLoading(false);\n//       });\n//   }, [type]);\n\n//   if (loading) return <p>Loading...</p>;\n\n//   return (\n//     <ul>\n//       {data.map((item, index) => (\n//         <li key={index}>{item._source.symbol} - {item._source.name}</li>\n//       ))}\n//     </ul>\n//   );\n// };\n\n// export default FinancialInstrumentList;\n\n// import React, { useEffect, useState } from 'react';\n// import { fetchData } from '../api';\n\n// const CategorizedData = ({ endpoint }) => {\n//   const [data, setData] = useState(null);\n\n//   useEffect(() => {\n//     const getData = async () => {\n//       const result = await fetchData(endpoint);\n//       setData(result);\n//     };\n//     getData();\n//   }, [endpoint]);\n\n//   if (!data) return <p>Loading...</p>;\n\n//   return (\n//     <div>\n//       <h2>{endpoint} Data</h2>\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\n//     </div>\n//   );\n// };\n\n// export default CategorizedData;\n\n// el code da sh8aaal haaaaaaaa\n\n// import React, { useEffect, useState } from 'react';\n// import { fetchData } from '../api';\n\n// const CategorizedData = ({ endpoint }) => {\n//   const [data, setData] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const getData = async () => {\n//       try {\n//         const result = await fetchData(endpoint);\n//         setData(result);\n//       } catch (err) {\n//         setError(err.message);\n//       }\n//     };\n//     getData();\n//   }, [endpoint]);\n\n//   if (error) return <p>Error: {error}</p>;\n//   if (!data) return <p>Loading...</p>;\n\n//   return (\n//     <div>\n//       <h2>{endpoint} Data</h2>\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\n//     </div>\n//   );\n// };\n\n// const DataTable = ({ data }) => {\n//   const keys = Object.keys(data); // Get all keys from the data\n\n//   return (\n//     <table>\n//       <thead>\n//         <tr>\n//           {keys.map((key, index) => (\n//             <th key={index}>{key}</th>\n//           ))}\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {data[keys[0]].map((item, rowIndex) => (\n//           <tr key={rowIndex}>\n//             {keys.map((key, colIndex) => (\n//               <td key={colIndex}>{item[key]}</td>\n//             ))}\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\n// export default CategorizedData;\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchData } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategorizedData = ({\n  endpoint\n}) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const result = await fetchData(endpoint);\n        setData(result); // Store the fetched data\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    getData();\n  }, [endpoint]);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 21\n  }, this);\n  if (!data) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [endpoint.charAt(0).toUpperCase() + endpoint.slice(1), \" Data\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n_s(CategorizedData, \"XDVXnHzsKW9JpOo48THjIq2+NOI=\");\n_c = CategorizedData;\nconst DataTable = ({\n  data\n}) => {\n  // Ensure data is an array of objects\n  const items = Array.isArray(data) ? data : Object.values(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '20px'\n    },\n    children: items.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ddd',\n        marginBottom: '20px',\n        borderRadius: '8px',\n        boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\n        padding: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          textAlign: 'left',\n          marginBottom: '10px'\n        },\n        children: [\"Record \", rowIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.entries(row).map(([key, value], colIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              borderBottom: '1px solid #f0f0f0'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'left',\n                padding: '10px',\n                backgroundColor: '#f8f9fa',\n                width: '30%',\n                fontWeight: 'bold'\n              },\n              children: key\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '10px',\n                textAlign: 'left'\n              },\n              children: typeof value === 'object' && value !== null ? JSON.stringify(value, null, 2) // Format nested objects/arrays\n              : value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, this)]\n          }, colIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, rowIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n_c2 = DataTable;\nexport default CategorizedData;\nvar _c, _c2;\n$RefreshReg$(_c, \"CategorizedData\");\n$RefreshReg$(_c2, \"DataTable\");","map":{"version":3,"names":["React","useEffect","useState","fetchData","jsxDEV","_jsxDEV","CategorizedData","endpoint","_s","data","setData","error","setError","getData","result","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","DataTable","_c","items","Array","isArray","Object","values","style","marginTop","map","row","rowIndex","border","marginBottom","borderRadius","boxShadow","padding","textAlign","width","borderCollapse","entries","key","value","colIndex","borderBottom","backgroundColor","fontWeight","JSON","stringify","_c2","$RefreshReg$"],"sources":["C:/Users/Philopater/Desktop/task/project/frontend/src/components/CategorizedData.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// const FinancialInstrumentList = ({ type }) => {\r\n//   const [data, setData] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     setLoading(true);\r\n//     fetch(`/api/financial/${type}`)\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setData(data.hits.hits || []); // Adjust based on JSON structure\r\n//         setLoading(false);\r\n//       });\r\n//   }, [type]);\r\n\r\n//   if (loading) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <ul>\r\n//       {data.map((item, index) => (\r\n//         <li key={index}>{item._source.symbol} - {item._source.name}</li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\n// export default FinancialInstrumentList;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { fetchData } from '../api';\r\n\r\n// const CategorizedData = ({ endpoint }) => {\r\n//   const [data, setData] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const getData = async () => {\r\n//       const result = await fetchData(endpoint);\r\n//       setData(result);\r\n//     };\r\n//     getData();\r\n//   }, [endpoint]);\r\n\r\n//   if (!data) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>{endpoint} Data</h2>\r\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CategorizedData;\r\n\r\n    // el code da sh8aaal haaaaaaaa\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { fetchData } from '../api';\r\n\r\n// const CategorizedData = ({ endpoint }) => {\r\n//   const [data, setData] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const getData = async () => {\r\n//       try {\r\n//         const result = await fetchData(endpoint);\r\n//         setData(result);\r\n//       } catch (err) {\r\n//         setError(err.message);\r\n//       }\r\n//     };\r\n//     getData();\r\n//   }, [endpoint]);\r\n\r\n//   if (error) return <p>Error: {error}</p>;\r\n//   if (!data) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>{endpoint} Data</h2>\r\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const DataTable = ({ data }) => {\r\n//   const keys = Object.keys(data); // Get all keys from the data\r\n\r\n//   return (\r\n//     <table>\r\n//       <thead>\r\n//         <tr>\r\n//           {keys.map((key, index) => (\r\n//             <th key={index}>{key}</th>\r\n//           ))}\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {data[keys[0]].map((item, rowIndex) => (\r\n//           <tr key={rowIndex}>\r\n//             {keys.map((key, colIndex) => (\r\n//               <td key={colIndex}>{item[key]}</td>\r\n//             ))}\r\n//           </tr>\r\n//         ))}\r\n//       </tbody>\r\n//     </table>\r\n//   );\r\n// };\r\n\r\n// export default CategorizedData;\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { fetchData } from '../api';\r\n\r\nconst CategorizedData = ({ endpoint }) => {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      try {\r\n        const result = await fetchData(endpoint);\r\n        setData(result); // Store the fetched data\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    };\r\n    getData();\r\n  }, [endpoint]);\r\n\r\n  if (error) return <p>Error: {error}</p>;\r\n  if (!data) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>{endpoint.charAt(0).toUpperCase() + endpoint.slice(1)} Data</h2>\r\n      <DataTable data={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst DataTable = ({ data }) => {\r\n  // Ensure data is an array of objects\r\n  const items = Array.isArray(data) ? data : Object.values(data);\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px' }}>\r\n      {items.map((row, rowIndex) => (\r\n        <div\r\n          key={rowIndex}\r\n          style={{\r\n            border: '1px solid #ddd',\r\n            marginBottom: '20px',\r\n            borderRadius: '8px',\r\n            boxShadow: '0 2px 4px rgba(0, 0, 0, 0.1)',\r\n            padding: '10px',\r\n          }}\r\n        >\r\n          <h3 style={{ textAlign: 'left', marginBottom: '10px' }}>\r\n            Record {rowIndex + 1}\r\n          </h3>\r\n          <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n            <tbody>\r\n              {Object.entries(row).map(([key, value], colIndex) => (\r\n                <tr key={colIndex} style={{ borderBottom: '1px solid #f0f0f0' }}>\r\n                  <th\r\n                    style={{\r\n                      textAlign: 'left',\r\n                      padding: '10px',\r\n                      backgroundColor: '#f8f9fa',\r\n                      width: '30%',\r\n                      fontWeight: 'bold',\r\n                    }}\r\n                  >\r\n                    {key}\r\n                  </th>\r\n                  <td style={{ padding: '10px', textAlign: 'left' }}>\r\n                    {typeof value === 'object' && value !== null\r\n                      ? JSON.stringify(value, null, 2) // Format nested objects/arrays\r\n                      : value}\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default CategorizedData;\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}