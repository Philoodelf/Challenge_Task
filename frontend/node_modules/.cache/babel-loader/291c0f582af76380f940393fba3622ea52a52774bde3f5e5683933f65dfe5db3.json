{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Philopater\\\\Desktop\\\\task\\\\project\\\\frontend\\\\src\\\\components\\\\ExchangeData.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import CategorizedData from './CategorizedData';\n\n// const ExchangeData = () => {\n//   return (\n//     <div>\n//       <h1 className=\"text-center text-3xl font-semibold mb-4\">Exchange Data</h1>\n//       <CategorizedData endpoint=\"exchange\" />\n//     </div>\n//   );\n// };\n\n// export default ExchangeData;\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExchangeData = () => {\n  _s();\n  const [data, setData] = useState([]); // Initialize as an empty array\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/apiexchange\");\n        const result = response.data;\n        if (result && Array.isArray(result)) {\n          setData(result); // Handle if API returns an array\n        } else if (result && typeof result === \"object\") {\n          setData(Object.values(result)); // Handle if API returns an object\n        } else {\n          setData([]); // Fallback to empty array\n        }\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Handle case when no data is available\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 font-semibold\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500 font-semibold\",\n      children: \"No data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Extract headers dynamically from the first item in the data array\n  const headers = data[0] ? Object.keys(data[0]) : [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold text-center text-blue-600 mb-4\",\n      children: \"Exchange Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table-auto min-w-full border border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-blue-600 text-white\",\n            children: headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 text-left border border-gray-300 capitalize\",\n              children: header.replace(/([A-Z])/g, \" $1\").trim()\n            }, header, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: `${rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"} hover:bg-gray-200`,\n            children: headers.map((header, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4 border border-gray-300\",\n              children: row[header] !== null && row[header] !== undefined && typeof row[header] !== \"object\" ? row[header] : JSON.stringify(row[header])\n            }, colIndex, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ExchangeData, \"nD7edIDRwNLC+/bSdKREAvtAsyY=\");\n_c = ExchangeData;\nexport default ExchangeData;\nvar _c;\n$RefreshReg$(_c, \"ExchangeData\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","ExchangeData","_s","data","setData","error","setError","fetchData","response","get","result","Array","isArray","Object","values","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","headers","keys","map","header","replace","trim","row","rowIndex","colIndex","undefined","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/Philopater/Desktop/task/project/frontend/src/components/ExchangeData.js"],"sourcesContent":["// import React from 'react';\r\n// import CategorizedData from './CategorizedData';\r\n\r\n// const ExchangeData = () => {\r\n//   return (\r\n//     <div>\r\n//       <h1 className=\"text-center text-3xl font-semibold mb-4\">Exchange Data</h1>\r\n//       <CategorizedData endpoint=\"exchange\" />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default ExchangeData;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ExchangeData = () => {\r\n  const [data, setData] = useState([]); // Initialize as an empty array\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/apiexchange\");\r\n        const result = response.data;\r\n\r\n        if (result && Array.isArray(result)) {\r\n          setData(result); // Handle if API returns an array\r\n        } else if (result && typeof result === \"object\") {\r\n          setData(Object.values(result)); // Handle if API returns an object\r\n        } else {\r\n          setData([]); // Fallback to empty array\r\n        }\r\n      } catch (err) {\r\n        setError(err.message);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Handle case when no data is available\r\n  if (error) {\r\n    return <p className=\"text-red-500 font-semibold\">Error: {error}</p>;\r\n  }\r\n\r\n  if (!data || data.length === 0) {\r\n    return <p className=\"text-gray-500 font-semibold\">No data available.</p>;\r\n  }\r\n\r\n  // Extract headers dynamically from the first item in the data array\r\n  const headers = data[0] ? Object.keys(data[0]) : [];\r\n\r\n  return (\r\n    <div className=\"p-4\">\r\n      <h2 className=\"text-2xl font-semibold text-center text-blue-600 mb-4\">\r\n        Exchange Data\r\n      </h2>\r\n      <div className=\"overflow-x-auto\">\r\n        <table className=\"table-auto min-w-full border border-gray-300\">\r\n          <thead>\r\n            <tr className=\"bg-blue-600 text-white\">\r\n              {headers.map((header) => (\r\n                <th\r\n                  key={header}\r\n                  className=\"py-2 px-4 text-left border border-gray-300 capitalize\"\r\n                >\r\n                  {header.replace(/([A-Z])/g, \" $1\").trim()}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, rowIndex) => (\r\n              <tr\r\n                key={rowIndex}\r\n                className={`${\r\n                  rowIndex % 2 === 0 ? \"bg-gray-50\" : \"bg-white\"\r\n                } hover:bg-gray-200`}\r\n              >\r\n                {headers.map((header, colIndex) => (\r\n                  <td\r\n                    key={colIndex}\r\n                    className=\"py-2 px-4 border border-gray-300\"\r\n                  >\r\n                    {row[header] !== null &&\r\n                    row[header] !== undefined &&\r\n                    typeof row[header] !== \"object\"\r\n                      ? row[header]\r\n                      : JSON.stringify(row[header])}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExchangeData;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}