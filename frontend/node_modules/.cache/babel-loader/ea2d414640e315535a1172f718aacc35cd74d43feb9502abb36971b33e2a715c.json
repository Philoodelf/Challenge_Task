{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n\n// const FinancialInstrumentList = ({ type }) => {\n//   const [data, setData] = useState([]);\n//   const [loading, setLoading] = useState(true);\n\n//   useEffect(() => {\n//     setLoading(true);\n//     fetch(`/api/financial/${type}`)\n//       .then((response) => response.json())\n//       .then((data) => {\n//         setData(data.hits.hits || []); // Adjust based on JSON structure\n//         setLoading(false);\n//       });\n//   }, [type]);\n\n//   if (loading) return <p>Loading...</p>;\n\n//   return (\n//     <ul>\n//       {data.map((item, index) => (\n//         <li key={index}>{item._source.symbol} - {item._source.name}</li>\n//       ))}\n//     </ul>\n//   );\n// };\n\n// export default FinancialInstrumentList;\n\n// import React, { useEffect, useState } from 'react';\n// import { fetchData } from '../api';\n\n// const CategorizedData = ({ endpoint }) => {\n//   const [data, setData] = useState(null);\n\n//   useEffect(() => {\n//     const getData = async () => {\n//       const result = await fetchData(endpoint);\n//       setData(result);\n//     };\n//     getData();\n//   }, [endpoint]);\n\n//   if (!data) return <p>Loading...</p>;\n\n//   return (\n//     <div>\n//       <h2>{endpoint} Data</h2>\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\n//     </div>\n//   );\n// };\n\n// export default CategorizedData;\n\n// import React, { useEffect, useState } from 'react';\n// import { fetchData } from '../api';\n\n// const CategorizedData = ({ endpoint }) => {\n//   const [data, setData] = useState(null);\n//   const [error, setError] = useState(null);\n\n//   useEffect(() => {\n//     const getData = async () => {\n//       try {\n//         const result = await fetchData(endpoint);\n//         setData(result);\n//       } catch (err) {\n//         setError(err.message);\n//       }\n//     };\n//     getData();\n//   }, [endpoint]);\n\n//   if (error) return <p>Error: {error}</p>;\n//   if (!data) return <p>Loading...</p>;\n\n//   return (\n//     <div>\n//       <h2>{endpoint} Data</h2>\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\n//     </div>\n//   );\n// };\n\n// const DataTable = ({ data }) => {\n//   const keys = Object.keys(data); // Get all keys from the data\n\n//   return (\n//     <table>\n//       <thead>\n//         <tr>\n//           {keys.map((key, index) => (\n//             <th key={index}>{key}</th>\n//           ))}\n//         </tr>\n//       </thead>\n//       <tbody>\n//         {data[keys[0]].map((item, rowIndex) => (\n//           <tr key={rowIndex}>\n//             {keys.map((key, colIndex) => (\n//               <td key={colIndex}>{item[key]}</td>\n//             ))}\n//           </tr>\n//         ))}\n//       </tbody>\n//     </table>\n//   );\n// };\n\n// export default CategorizedData;","map":{"version":3,"names":[],"sources":["C:/Users/Philopater/Desktop/task/project/frontend/src/components/CategorizedData.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n\r\n// const FinancialInstrumentList = ({ type }) => {\r\n//   const [data, setData] = useState([]);\r\n//   const [loading, setLoading] = useState(true);\r\n\r\n//   useEffect(() => {\r\n//     setLoading(true);\r\n//     fetch(`/api/financial/${type}`)\r\n//       .then((response) => response.json())\r\n//       .then((data) => {\r\n//         setData(data.hits.hits || []); // Adjust based on JSON structure\r\n//         setLoading(false);\r\n//       });\r\n//   }, [type]);\r\n\r\n//   if (loading) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <ul>\r\n//       {data.map((item, index) => (\r\n//         <li key={index}>{item._source.symbol} - {item._source.name}</li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\n// export default FinancialInstrumentList;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { fetchData } from '../api';\r\n\r\n// const CategorizedData = ({ endpoint }) => {\r\n//   const [data, setData] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const getData = async () => {\r\n//       const result = await fetchData(endpoint);\r\n//       setData(result);\r\n//     };\r\n//     getData();\r\n//   }, [endpoint]);\r\n\r\n//   if (!data) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>{endpoint} Data</h2>\r\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default CategorizedData;\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { fetchData } from '../api';\r\n\r\n// const CategorizedData = ({ endpoint }) => {\r\n//   const [data, setData] = useState(null);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const getData = async () => {\r\n//       try {\r\n//         const result = await fetchData(endpoint);\r\n//         setData(result);\r\n//       } catch (err) {\r\n//         setError(err.message);\r\n//       }\r\n//     };\r\n//     getData();\r\n//   }, [endpoint]);\r\n\r\n//   if (error) return <p>Error: {error}</p>;\r\n//   if (!data) return <p>Loading...</p>;\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>{endpoint} Data</h2>\r\n//       <pre>{JSON.stringify(data, null, 2)}</pre>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// const DataTable = ({ data }) => {\r\n//   const keys = Object.keys(data); // Get all keys from the data\r\n\r\n//   return (\r\n//     <table>\r\n//       <thead>\r\n//         <tr>\r\n//           {keys.map((key, index) => (\r\n//             <th key={index}>{key}</th>\r\n//           ))}\r\n//         </tr>\r\n//       </thead>\r\n//       <tbody>\r\n//         {data[keys[0]].map((item, rowIndex) => (\r\n//           <tr key={rowIndex}>\r\n//             {keys.map((key, colIndex) => (\r\n//               <td key={colIndex}>{item[key]}</td>\r\n//             ))}\r\n//           </tr>\r\n//         ))}\r\n//       </tbody>\r\n//     </table>\r\n//   );\r\n// };\r\n\r\n// export default CategorizedData;\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}